version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: ipv6-wireguard-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ipv6wgm
      MYSQL_USER: ipv6wgm
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - ipv6-wireguard-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: --default-authentication-plugin=mysql_native_password

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: ipv6-wireguard-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ipv6-wireguard-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: ipv6-wireguard-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=mysql://ipv6wgm:password@mysql:3306/ipv6wgm
      - REDIS_URL=redis://:redis123@redis:6379/0
      - DEBUG=false
      - LOG_LEVEL=INFO
    volumes:
      - ./backend/logs:/app/logs
      - /etc/wireguard:/etc/wireguard:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ipv6-wireguard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 注意：前端服务已迁移到PHP，不再使用Docker容器
  # 请使用 deploy_php_frontend.sh 脚本部署PHP前端
  # Nginx配置请参考 php-frontend/nginx.conf

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ipv6-wireguard-network:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
        - subnet: 2001:db8::/64