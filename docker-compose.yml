version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: ipv6wgm-postgres
    environment:
      POSTGRES_DB: ipv6wgm
      POSTGRES_USER: ipv6wgm
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ipv6wgm-network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: ipv6wgm-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ipv6wgm-network
    restart: unless-stopped

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ipv6wgm-backend
    environment:
      - DATABASE_URL=postgresql://ipv6wgm:password@postgres:5432/ipv6wgm
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here
      - DEBUG=true
    volumes:
      - ./backend:/app
      - /etc/wireguard:/etc/wireguard:ro
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - ipv6wgm-network
    restart: unless-stopped

  # 前端服务 (包含Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ipv6wgm-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ipv6wgm-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  ipv6wgm-network:
    driver: bridge
