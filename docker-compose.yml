version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: ipv6wgm-mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-ipv6wgm}
      MYSQL_USER: ${MYSQL_USER:-ipv6wgm}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/low-memory.cnf:/etc/mysql/conf.d/low-memory.cnf
    ports:
      - "3306:3306"
    networks:
      - ipv6wgm-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis缓存（可选，低内存环境可禁用）
  redis:
    image: redis:7-alpine
    container_name: ipv6wgm-redis
    command: redis-server --appendonly yes --maxmemory 64mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ipv6wgm-network
    restart: unless-stopped
    profiles:
      - full  # 仅在完整安装时启用

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ipv6wgm-backend
    environment:
      - DATABASE_URL=mysql://${MYSQL_USER:-ipv6wgm}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE:-ipv6wgm}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-false}
    volumes:
      - ./backend:/app
      - /etc/wireguard:/etc/wireguard:ro
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      - mysql
    networks:
      - ipv6wgm-network
    restart: unless-stopped

  # 注意：前端服务已迁移到PHP，不再使用Docker容器
  # 请使用 deploy_php_frontend.sh 脚本部署PHP前端

volumes:
  mysql_data:
  redis_data:

networks:
  ipv6wgm-network:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
        - subnet: 2001:db8::/64
