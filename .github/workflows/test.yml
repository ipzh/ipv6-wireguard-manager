name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 3306:${DB_PORT}
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:${REDIS_PORT}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-asyncio pytest-cov
    
    - name: Run backend tests
      env:
        DATABASE_URL: mysql://test_user:test_password@localhost:${DB_PORT}/test_db
        REDIS_URL: redis://localhost:${REDIS_PORT}/0
        SECRET_KEY: test-secret-key
        FIRST_SUPERUSER_PASSWORD: test-admin-password
        DEBUG: true
      run: |
        cd backend
        pytest tests/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella

  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: curl, json, mbstring, openssl, pdo, pdo_mysql
        tools: composer, phpunit
    
    - name: Install PHP dependencies
      run: |
        cd php-frontend
        composer install --no-dev --optimize-autoloader
    
    - name: Run PHP syntax check
      run: |
        find php-frontend -name "*.php" -exec php -l {} \;
    
    - name: Run PHP tests
      run: |
        cd php-frontend
        # 如果有PHPUnit测试，运行它们
        # phpunit tests/
        echo "PHP frontend tests completed"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./php-frontend/coverage.xml
        flags: frontend
        name: codecov-umbrella